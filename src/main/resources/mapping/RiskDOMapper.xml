<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nCov.DataView.dao.RiskDOMapper">
    <resultMap id="BaseResultMap" type="com.nCov.DataView.model.entity.RiskDO">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="start_address" property="startAddress" jdbcType="VARCHAR"/>
        <result column="end_address" property="endAddress" jdbcType="VARCHAR"/>
        <result column="area_name" property="areaName" jdbcType="VARCHAR"/>
        <result column="sum_score" property="sumScore" jdbcType="DOUBLE"/>
        <result column="tran_type" property="tranType" jdbcType="INTEGER"/>
        <result column="latest_update" property="latestUpdate" jdbcType="DATE"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, start_address, end_address, area_name, sum_score, tran_type, latest_update
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.nCov.DataView.model.entity.RiskDOExample">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from risk
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from risk
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from risk
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.nCov.DataView.model.entity.RiskDOExample">
        delete from risk
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.nCov.DataView.model.entity.RiskDO">
    insert into risk (id, start_address, end_address, 
      area_name, sum_score, tran_type, 
      latest_update)
    values (#{id,jdbcType=INTEGER}, #{startAddress,jdbcType=VARCHAR}, #{endAddress,jdbcType=VARCHAR}, 
      #{areaName,jdbcType=VARCHAR}, #{sumScore,jdbcType=DOUBLE}, #{tranType,jdbcType=INTEGER}, 
      #{latestUpdate,jdbcType=DATE})
  </insert>
    <insert id="insertSelective" parameterType="com.nCov.DataView.model.entity.RiskDO">
        insert into risk
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="startAddress != null">
                start_address,
            </if>
            <if test="endAddress != null">
                end_address,
            </if>
            <if test="areaName != null">
                area_name,
            </if>
            <if test="sumScore != null">
                sum_score,
            </if>
            <if test="tranType != null">
                tran_type,
            </if>
            <if test="latestUpdate != null">
                latest_update,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="startAddress != null">
                #{startAddress,jdbcType=VARCHAR},
            </if>
            <if test="endAddress != null">
                #{endAddress,jdbcType=VARCHAR},
            </if>
            <if test="areaName != null">
                #{areaName,jdbcType=VARCHAR},
            </if>
            <if test="sumScore != null">
                #{sumScore,jdbcType=DOUBLE},
            </if>
            <if test="tranType != null">
                #{tranType,jdbcType=INTEGER},
            </if>
            <if test="latestUpdate != null">
                #{latestUpdate,jdbcType=DATE},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.nCov.DataView.model.entity.RiskDOExample"
            resultType="java.lang.Integer">
        select count(*) from risk
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update risk
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.startAddress != null">
                start_address = #{record.startAddress,jdbcType=VARCHAR},
            </if>
            <if test="record.endAddress != null">
                end_address = #{record.endAddress,jdbcType=VARCHAR},
            </if>
            <if test="record.areaName != null">
                area_name = #{record.areaName,jdbcType=VARCHAR},
            </if>
            <if test="record.sumScore != null">
                sum_score = #{record.sumScore,jdbcType=DOUBLE},
            </if>
            <if test="record.tranType != null">
                tran_type = #{record.tranType,jdbcType=INTEGER},
            </if>
            <if test="record.latestUpdate != null">
                latest_update = #{record.latestUpdate,jdbcType=DATE},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update risk
        set id = #{record.id,jdbcType=INTEGER},
        start_address = #{record.startAddress,jdbcType=VARCHAR},
        end_address = #{record.endAddress,jdbcType=VARCHAR},
        area_name = #{record.areaName,jdbcType=VARCHAR},
        sum_score = #{record.sumScore,jdbcType=DOUBLE},
        tran_type = #{record.tranType,jdbcType=INTEGER},
        latest_update = #{record.latestUpdate,jdbcType=DATE}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.nCov.DataView.model.entity.RiskDO">
        update risk
        <set>
            <if test="startAddress != null">
                start_address = #{startAddress,jdbcType=VARCHAR},
            </if>
            <if test="endAddress != null">
                end_address = #{endAddress,jdbcType=VARCHAR},
            </if>
            <if test="areaName != null">
                area_name = #{areaName,jdbcType=VARCHAR},
            </if>
            <if test="sumScore != null">
                sum_score = #{sumScore,jdbcType=DOUBLE},
            </if>
            <if test="tranType != null">
                tran_type = #{tranType,jdbcType=INTEGER},
            </if>
            <if test="latestUpdate != null">
                latest_update = #{latestUpdate,jdbcType=DATE},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.nCov.DataView.model.entity.RiskDO">
    update risk
    set start_address = #{startAddress,jdbcType=VARCHAR},
      end_address = #{endAddress,jdbcType=VARCHAR},
      area_name = #{areaName,jdbcType=VARCHAR},
      sum_score = #{sumScore,jdbcType=DOUBLE},
      tran_type = #{tranType,jdbcType=INTEGER},
      latest_update = #{latestUpdate,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>