<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nCov.DataView.dao.PassInfoDOMapper">
  <resultMap id="BaseResultMap" type="com.nCov.DataView.model.entity.PassInfoDO">
    <id column="id" property="id" jdbcType="INTEGER"/>
    <result column="path_id" property="pathId" jdbcType="INTEGER"/>
    <result column="area" property="area" jdbcType="VARCHAR"/>
    <result column="type" property="type" jdbcType="INTEGER"/>
    <result column="order" property="order" jdbcType="INTEGER"/>
    <result column="distance" property="distance" jdbcType="INTEGER"/>
    <result column="start" property="start" jdbcType="VARCHAR"/>
    <result column="end" property="end" jdbcType="VARCHAR"/>
    <result column="title" property="title" jdbcType="VARCHAR"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, path_id, area, `type`, `order`, distance, `start`, `end`, title
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap"
          parameterType="com.nCov.DataView.model.entity.PassInfoDOExample">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List"/>
    from passInfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List"/>
    from passInfo
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from passInfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nCov.DataView.model.entity.PassInfoDOExample">
    delete from passInfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </delete>
  <insert id="insertList" parameterType="java.util.List">
    insert into passInfo (path_id, area,
    type, `order`, distance,
    `start`, `end`, title)
    values
    <foreach collection="list" item="PassInfoDO" index="index" separator=",">
      (
      #{PassInfoDO.pathId},
      #{PassInfoDO.area},
      #{PassInfoDO.type},
      #{PassInfoDO.order},
      #{PassInfoDO.distance},
      #{PassInfoDO.start},
      #{PassInfoDO.end},
      #{PassInfoDO.title}
      )
    </foreach>
  </insert>
  <insert id="insert" parameterType="com.nCov.DataView.model.entity.PassInfoDO">
    insert into passInfo (id, path_id, area,
    type, order, distance,
    start, end, title)
    values (#{id,jdbcType=INTEGER}, #{pathId,jdbcType=INTEGER}, #{area,jdbcType=VARCHAR},
    #{type,jdbcType=INTEGER}, #{order,jdbcType=INTEGER}, #{distance,jdbcType=INTEGER},
    #{start,jdbcType=VARCHAR}, #{end,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.nCov.DataView.model.entity.PassInfoDO">
    insert into passInfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="pathId != null">
        path_id,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="order != null">
        order,
      </if>
      <if test="distance != null">
        distance,
      </if>
      <if test="start != null">
        start,
      </if>
      <if test="end != null">
        end,
      </if>
      <if test="title != null">
        title,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="pathId != null">
        #{pathId,jdbcType=INTEGER},
      </if>
      <if test="area != null">
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="order != null">
        #{order,jdbcType=INTEGER},
      </if>
      <if test="distance != null">
        #{distance,jdbcType=INTEGER},
      </if>
      <if test="start != null">
        #{start,jdbcType=VARCHAR},
      </if>
      <if test="end != null">
        #{end,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nCov.DataView.model.entity.PassInfoDOExample"
          resultType="java.lang.Integer">
    select count(*) from passInfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </select>
    <select id="selectByPathId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
      select distinct `order` from passInfo where path_id = #{pathId,jdbcType=INTEGER}
    </select>
    <update id="updateByExampleSelective" parameterType="map">
    update passInfo
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.pathId != null">
        path_id = #{record.pathId,jdbcType=INTEGER},
      </if>
      <if test="record.area != null">
        area = #{record.area,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.order != null">
        order = #{record.order,jdbcType=INTEGER},
      </if>
      <if test="record.distance != null">
        distance = #{record.distance,jdbcType=INTEGER},
      </if>
      <if test="record.start != null">
        start = #{record.start,jdbcType=VARCHAR},
      </if>
      <if test="record.end != null">
        end = #{record.end,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update passInfo
    set id = #{record.id,jdbcType=INTEGER},
    path_id = #{record.pathId,jdbcType=INTEGER},
    area = #{record.area,jdbcType=VARCHAR},
    type = #{record.type,jdbcType=INTEGER},
    order = #{record.order,jdbcType=INTEGER},
    distance = #{record.distance,jdbcType=INTEGER},
    start = #{record.start,jdbcType=VARCHAR},
    end = #{record.end,jdbcType=VARCHAR},
    title = #{record.title,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nCov.DataView.model.entity.PassInfoDO">
    update passInfo
    <set>
      <if test="pathId != null">
        path_id = #{pathId,jdbcType=INTEGER},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="order != null">
        order = #{order,jdbcType=INTEGER},
      </if>
      <if test="distance != null">
        distance = #{distance,jdbcType=INTEGER},
      </if>
      <if test="start != null">
        start = #{start,jdbcType=VARCHAR},
      </if>
      <if test="end != null">
        end = #{end,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nCov.DataView.model.entity.PassInfoDO">
    update passInfo
    set path_id = #{pathId,jdbcType=INTEGER},
    area = #{area,jdbcType=VARCHAR},
    type = #{type,jdbcType=INTEGER},
    order = #{order,jdbcType=INTEGER},
    distance = #{distance,jdbcType=INTEGER},
    start = #{start,jdbcType=VARCHAR},
    end = #{end,jdbcType=VARCHAR},
    title = #{title,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>